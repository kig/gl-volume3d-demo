!function r(n,a,e){function t(l,i){if(!a[l]){if(!n[l]){var c="function"==typeof require&&require;if(!i&&c)return c(l,!0);if(o)return o(l,!0);var u=new Error("Cannot find module '"+l+"'");throw u.code="MODULE_NOT_FOUND",u}var y=a[l]={exports:{}};n[l][0].call(y.exports,function(r){var a=n[l][1][r];return t(a||r)},y,y.exports,r,n,a,e)}return a[l].exports}for(var o="function"==typeof require&&require,l=0;l<e.length;l++)t(e[l]);return t}({1:[function(r,n,a){"use strict";function e(r,n){return!(!n||!/[^\s\0]/.test(n))&&(console.error(r+"\n"+n),n)}function t(r,n,a){var t=r.createShader(r.VERTEX_SHADER);r.shaderSource(t,n),r.compileShader(t);var o=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(o,a),r.compileShader(o);var l=r.createProgram();r.attachShader(l,t),r.deleteShader(t),r.attachShader(l,o),r.deleteShader(o),r.linkProgram(l);var i=!1;if(i|=e("program",r.getProgramInfoLog(l)),i|=e("vertex",r.getShaderInfoLog(t)),i|=e("fragment",r.getShaderInfoLog(o)))throw new Error("Invalid shader");return l}function o(r,n,a,e,t){return l(r,n,a,"range",function(r){return parseFloat(r.value)},{min:e,max:t,step:.001,value:n[a]})}function l(r,n,a,e,t,o){var l=document.createElement("div"),i=document.createElement("label");i.for=r,i.textContent=r;var c=document.createElement("input");c.id=r,c.type=e;for(var u in o)c[u]=o[u];return c.oninput=c.onchange=function(r){n[a]=t(this)},l.appendChild(i),l.appendChild(c),l}var i=function(){function r(r,n){var a=[],e=!0,t=!1,o=void 0;try{for(var l,i=r[Symbol.iterator]();!(e=(l=i.next()).done)&&(a.push(l.value),!n||a.length!==n);e=!0);}catch(r){t=!0,o=r}finally{try{!e&&i.return&&i.return()}finally{if(t)throw o}}return a}return function(n,a){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return r(n,a);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),c=document.body.appendChild(document.createElement("canvas")),u=c.getContext("webgl2"),y=r("right-now"),w=r("gl-mat4"),A=(r("gl-vec3"),r("./lib/fastIsosurface")),F={renderer:"volume",isocaps:!1,isoLevel:.65,isoRange:.6,raySteps:256},s={min:[0,0,0],max:[1,1,1]},f=3,v=30,p=4,m=-.5,d={raytrace:"\n    struct Box {\n      vec3 minPoint;\n      vec3 maxPoint;\n    };\n\n    bool boxIntersect(vec3 ro, vec3 rd, Box box, out float t1, out float t2, out vec3 nml)\n    {\n      vec3 ird = 1.0 / rd;\n      vec3 v1 = (box.minPoint - ro) * ird;\n      vec3 v2 = (box.maxPoint - ro) * ird;\n      vec3 n = min(v1, v2);\n      vec3 f = max(v1, v2);\n      float enter = max(n.x, max(n.y, n.z));\n      float exit = min(f.x, min(f.y, f.z));\n      if (exit > 0.0 && enter < exit) {\n        t1 = enter;\n        t2 = exit;\n        return true;\n      }\n      return false;\n    }\n\n    bool planeIntersect(vec3 ro, vec3 rd, vec3 p, vec3 nml, out float t)\n    {\n      float d = dot(nml, rd);\n      if (d <= 0.0) {\n        return false;\n      }\n      d = -dot(ro-p, nml) / d;\n      if (d < 0.0) {\n        return false;\n      }\n      t = d;\n      return true;\n    }\n    "},h="#version 300 es\n\nprecision highp float;\nprecision highp sampler3D;\n\nin vec3 vPosition;\n\nuniform sampler3D uTexture;\nuniform float uTime;\nuniform vec2 uResolution;\n\nuniform mat4 uModelView;\nuniform mat4 uProjection;\n\nuniform vec3 uClipBoxMin;\nuniform vec3 uClipBoxMax;\n\nuniform bool uIsocaps;\n\nuniform float uIsoLevel;\nuniform float uIsoRange;\nuniform float uRaySteps;\n\nout vec4 color;\n\n"+d.raytrace+"\n\nvec3 gradient(vec3 uvw, vec4 c)\n{\n  vec3 e = vec3(0.0, 0.0, 1.0 / 256.0);\n  vec4 dx = texture(uTexture, uvw + e.zxx, -16.0) - c;\n  vec4 dy = texture(uTexture, uvw + e.xzx, -16.0) - c;\n  vec4 dz = texture(uTexture, uvw + e.xxz, -16.0) - c;\n  return vec3(dx.r, dy.r, dz.r);\n}\n\nvec3 grey(vec3 rgb) {\n  return vec3((rgb.r + rgb.g + rgb.b) / 3.0);\n}\n\nvec4 getColor(vec3 uvw, vec4 c) {\n  vec3 grad = gradient(uvw, c);\n  float alpha = 0.005; //mix(0.05*c.r, 0.01*c.r, pow(clamp(c.r+0., 0.0, 1.0), 4.0));\n  if (abs(c.r - uIsoLevel) <= uIsoRange) {\n    alpha = 0.15;\n  }\n  alpha *= c.a;\n  c.r = abs(c.r - uIsoLevel) * 2.0;\n  vec3 col = 1.0-max(vec3(0.0), vec3(c.r*2., abs(0.7-c.r), 0.8-c.r)+0.5);\n  col = col.bgr;\n  col.r *= 0.75;\n  col.b *= 0.5;\n  return vec4(pow(grey(abs(grad))+abs(grad), vec3(0.5))+col, alpha);  \n}\n\nvec4 getCapColor(vec3 uvw, vec4 c) {\n  vec3 grad = gradient(uvw, c);\n  float alpha = 0.005; //mix(0.05*c.r, 0.01*c.r, pow(clamp(c.r+0., 0.0, 1.0), 4.0));\n  if (abs(c.r - uIsoLevel) <= uIsoRange) {\n    alpha = 0.15;\n  }\n  alpha *= c.a;\n  vec3 col = 1.0-max(vec3(0.0), vec3(c.r*2., abs(0.7-c.r), 0.8-c.r)+0.5);\n  col = col.bgr;\n  col.r *= 0.75;\n  col.b *= 0.5;\n  return vec4(pow(grey(abs(grad))+abs(grad), vec3(0.5))+col, alpha);  \n}\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy / uResolution * 2.0 - 1.0;\n\n  mat4 clipToEye = inverse(uProjection);\n  mat4 eyeToWorld = inverse(uModelView);\n\n  vec4 clipNear = vec4(uv, -1.0, 1.0);\n  vec4 clipFar = vec4(uv, 1.0, 1.0);\n\n  vec4 eyeNear = clipToEye * clipNear;\n  vec4 eyeFar = clipToEye * clipFar;\n\n  vec4 worldNear = eyeToWorld * eyeNear;\n  vec4 worldFar = eyeToWorld * eyeFar;\n\n  vec3 ro = worldNear.xyz / worldNear.w;\n  vec3 rd = normalize((worldFar.xyz / worldFar.w) - ro);\n\n  color = vec4(0.0);\n  float t1, t2;\n  vec3 nml;\n  Box clipBox = Box(uClipBoxMin, uClipBoxMax);\n  if (boxIntersect(ro, rd, clipBox, t1, t2, nml)) {\n    vec3 uvw = (ro + rd * t1);\n    if ( uIsocaps && all(lessThanEqual(uvw, vec3(1.0))) && all(greaterThanEqual(uvw, vec3(0.0))) ) {\n      vec4 c = texture(uTexture, uvw, -16.0);\n      if (abs(c.r - uIsoLevel) <= uIsoRange) {\n        vec4 col = getCapColor(uvw, c);\n        color = 1.0 - col;\n        color.a = sqrt(c.r) * c.a;\n      }\n    }\n    vec3 p1 = ro + rd * t1;\n    vec4 accum = vec4(0.0);\n    bool noHit = true;\n    float steps = ceil((t2-t1) * uRaySteps);\n    for (float i=0.0; i<=steps; i++) {\n      float t = 1.0 - i/steps;\n      vec3 uvw = (p1 + rd * (t2-t1) * t);\n      //uvw += vec3(sin(uTime + uvw.y*6.0) * 0.2, 0.0, 0.0);\n      vec3 ou = uvw;\n      if (all(lessThanEqual(uvw, clipBox.maxPoint)) && all(greaterThanEqual(uvw, clipBox.minPoint)) ) {\n        vec4 c = texture(uTexture, uvw, -16.0);\n        //if (abs(c.r - uIsoLevel) <= uIsoRange) {\n          vec4 col = getColor(uvw, c);\n          accum = mix(accum, col, col.a);\n          noHit = false;\n        //}\n      }\n    }\n//    if (noHit) {\n//      discard;\n//      return;\n//    }\n    color = mix(1.0 - accum, color, color.a);\n    color.a = 1.0;\n  }\n}\n",x="#version 300 es\n\nprecision highp float;\nprecision highp sampler3D;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin float vClipped;\n\nuniform sampler3D uTexture;\nuniform float uTime;\nuniform vec2 uResolution;\n\nuniform mat4 uModelView;\nuniform mat4 uProjection;\n\nuniform bool uIsocaps;\n\nuniform float uIsoLevel;\nuniform float uIsoRange;\n\nuniform vec3 uLightPosition;\nuniform vec4 uLightColor;\n\nuniform vec3 uClipBoxMin;\nuniform vec3 uClipBoxMax;\n\nout vec4 color;\n\n"+d.raytrace+"\n\nvoid main() {\n  Box clipBox = Box(uClipBoxMin, uClipBoxMax);\n  vec3 p = vPosition;\n  if (any(lessThan(p, clipBox.minPoint)) || any(greaterThan(p, clipBox.maxPoint))) {\n    discard;\n  }\n  color = vec4(abs(dot(normalize(vNormal), -normalize(transpose(mat3(inverse(uModelView))) * uLightPosition))) * uLightColor * uLightColor.a);\n  /*\n  if (vClipped > 0.0) {\n    color = texture(uTexture, vPosition.xyz).rrra;\n    if (!uIsocaps || (vClipped > 1.0 && abs(color.r - uIsoLevel) > uIsoRange)) {\n      discard;\n    }\n  }\n  */\n  color.a = 1.0;\n}",g="#version 300 es\n\n#define POSITION_LOCATION 0\n#define NORMAL_LOCATION 1\n\nprecision highp float;\nprecision highp int;\n\nlayout(location = POSITION_LOCATION) in vec3 aPosition;\nlayout(location = NORMAL_LOCATION) in vec3 aNormal;\n\nuniform mat4 uModelView;\nuniform mat4 uProjection;\nuniform float uTime;\nuniform vec3 uClipBoxMin;\nuniform vec3 uClipBoxMax;\nuniform vec3 uDimensions;\n\nout vec3 vPosition;\nout vec3 vNormal;\n\nout float vClipped;\n\n"+d.raytrace+"\n\nvoid main() {\n  Box clipBox = Box(uClipBoxMin, uClipBoxMax);\n\n  vec3 p = aPosition / uDimensions;\n  /*\n  vec3 cp = clamp(p, clipBox.minPoint, clipBox.maxPoint);\n  vec3 d = (p - cp) * uDimensions;\n  vec3 ad = abs(d);\n  float maxD = max(max(ad.x, ad.y), ad.z);\n  vClipped = maxD;\n  */\n  gl_Position = uProjection * uModelView * vec4(p, 1.0);\n  vPosition = p;\n  vNormal = normalize(transpose(mat3(inverse(uModelView))) * aNormal);\n}",T="#version 300 es\n\nprecision highp float;\nprecision highp sampler3D;\n\nin vec3 vPosition;\nin vec3 vNormal;\nin float vClipped;\n\nuniform sampler3D uTexture;\nuniform float uTime;\nuniform vec2 uResolution;\n\nuniform mat4 uModelView;\nuniform mat4 uProjection;\n\nuniform bool uIsocaps;\n\nuniform float uIsoLevel;\nuniform float uIsoRange;\n\nuniform vec3 uLightPosition;\nuniform vec4 uLightColor;\n\nuniform vec3 uClipBoxMin;\nuniform vec3 uClipBoxMax;\n\nout vec4 color;\n\n"+d.raytrace+"\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy / uResolution * 2.0 - 1.0;\n\n  mat4 clipToEye = inverse(uProjection);\n  mat4 eyeToWorld = inverse(uModelView);\n\n  vec4 clipNear = vec4(uv, -1.0, 1.0);\n  vec4 clipFar = vec4(uv, 1.0, 1.0);\n\n  vec4 eyeNear = clipToEye * clipNear;\n  vec4 eyeFar = clipToEye * clipFar;\n\n  vec4 worldNear = eyeToWorld * eyeNear;\n  vec4 worldFar = eyeToWorld * eyeFar;\n\n  vec3 ro = worldNear.xyz / worldNear.w;\n  vec3 rd = normalize((worldFar.xyz / worldFar.w) - ro);\n\n  color = vec4(0.0);\n  float t1, t2;\n  vec3 nml;\n  Box clipBox = Box(uClipBoxMin, uClipBoxMax);\n  if (boxIntersect(ro, rd, clipBox, t1, t2, nml)) {\n    color = texture(uTexture, ro + rd * t1).rrra;\n  }\n  color.a = 1.0;\n}",M="#version 300 es\n\n#define POSITION_LOCATION 0\n#define NORMAL_LOCATION 1\n\nprecision highp float;\nprecision highp int;\n\nlayout(location = POSITION_LOCATION) in vec3 aPosition;\nlayout(location = NORMAL_LOCATION) in vec3 aNormal;\n\nuniform mat4 uModelView;\nuniform mat4 uProjection;\nuniform float uTime;\nuniform vec3 uClipBoxMin;\nuniform vec3 uClipBoxMax;\nuniform vec3 uDimensions;\n\nout vec3 vPosition;\nout vec3 vNormal;\n\nout float vClipped;\n\n"+d.raytrace+"\n\nvoid main() {\n  Box clipBox = Box(uClipBoxMin, uClipBoxMax);\n\n  vec3 p = aPosition / uDimensions;\n  vec3 cp = clamp(p, clipBox.minPoint, clipBox.maxPoint);\n  vec3 d = (p - cp) * uDimensions;\n  vec3 ad = abs(d);\n  float maxD = max(max(ad.x, ad.y), ad.z);\n  vClipped = maxD;\n  gl_Position = uProjection * uModelView * vec4(cp, 1.0);\n  vPosition = cp;\n  vNormal = normalize(transpose(mat3(inverse(uModelView))) * aNormal);\n}",E=t(u,"#version 300 es\n\n#define POSITION_LOCATION 0\n\nprecision highp float;\nprecision highp int;\n\nlayout(location = POSITION_LOCATION) in vec3 aPosition;\n\nout vec3 vPosition;\n\nvoid main() {\n  gl_Position = vec4(aPosition, 1.0);\n  vPosition = gl_Position.xyz;\n}",h),C=t(u,g,x),R=t(u,M,T),L=!1,b=[0,0],I=[0,0],P=[0,0];window.onmousedown=function(r){"CANVAS"===r.target.tagName&&(r.preventDefault(),L=!0,b=[r.clientX,r.clientY])},window.onmousemove=function(r){if(L){for(I=[r.clientX,r.clientY],P=I.map(function(r,n){return r-b[n]}),b=I,p-=.01*P[0];p<0;)p+=2*Math.PI;p%=2*Math.PI,m-=.01*P[1],m=Math.max(-Math.PI/2,Math.min(Math.PI/2,m)),r.preventDefault()}},window.onmouseup=function(r){L&&(r.preventDefault(),L=!1)},window.addEventListener("wheel",function(r){r.preventDefault();var n=r.wheelDeltaY||r.deltaY||r.wheelDelta||r.detail;void 0===n&&(n=0),f*=Math.pow(1.01,-n),f=Math.max(.5,Math.min(10,f))},!1);var B=document.createElement("form");B.className="controls",B.style.position="absolute",B.style.zIndex=1,B.style.left="10px",B.style.top="10px",B.appendChild(o("Min X",s.min,0,0,1)),B.appendChild(o("Min Y",s.min,1,0,1)),B.appendChild(o("Min Z",s.min,2,0,1)),B.appendChild(o("Max X",s.max,0,0,1)),B.appendChild(o("Max Y",s.max,1,0,1)),B.appendChild(o("Max Z",s.max,2,0,1)),B.appendChild(o("Iso level",F,"isoLevel",0,1)),B.appendChild(o("Iso range",F,"isoRange",0,1)),B.appendChild(function(r,n,a,e){var t=document.createElement("div"),o=document.createElement("h4");return o.textContent=r,t.appendChild(o),e.forEach(function(e){var o=i(e,2),l=o[0],c=o[1],u=document.createElement("div"),y=document.createElement("label");y.textContent=" "+l;var w=document.createElement("input");w.name=r,w.type="radio",w.value=c,w.checked=n[a]===c,w.oninput=w.onchange=function(e){n[a]=this.form[r].value},u.appendChild(w),u.appendChild(y),t.appendChild(u)}),t}("Renderer",F,"renderer",[["Isosurface","isosurface"],["Volume","volume"]])),B.appendChild(function(r,n,a){return l(r,n,a,"checkbox",function(r){return r.checked},{checked:n[a]})}("Isocaps",F,"isocaps")),B.appendChild(o("Raymarch steps",F,"raySteps",32,384)),document.body.appendChild(B);var _=function(r,n,a){a||(a=n,n="text");var e=new XMLHttpRequest;e.responseType=n,e.onload=function(){a(e.response)},e.open("GET",r,!0),e.send()};_("data/MRbrain.txt","arraybuffer",function(n){function a(r,n,a,e,t,o){var l=2e3*F.isoLevel+1300|0,i=2e3*F.isoRange|0,c=A.marchingCubes(e,t,l-i,l+i),u=c.vertices,y=c.normals;return r.bindBuffer(r.ARRAY_BUFFER,n),r.bufferData(r.ARRAY_BUFFER,u,r.STATIC_DRAW),r.bindBuffer(r.ARRAY_BUFFER,a),r.bufferData(r.ARRAY_BUFFER,y,r.STATIC_DRAW),u.length/3}function e(r,n,a,e){r.useProgram(n),r.uniform1i(r.getCachedUniformLocation(n,"uTexture"),0),r.uniform1i(r.getCachedUniformLocation(n,"uIsocaps"),F.isocaps?1:0),r.uniform1f(r.getCachedUniformLocation(n,"uTime"),y()/1e3),r.uniform1f(r.getCachedUniformLocation(n,"uIsoLevel"),F.isoLevel),r.uniform1f(r.getCachedUniformLocation(n,"uIsoRange"),F.isoRange),r.uniform1f(r.getCachedUniformLocation(n,"uRaySteps"),F.raySteps),r.uniform2f(r.getCachedUniformLocation(n,"uResolution"),a,e),r.uniform3fv(r.getCachedUniformLocation(n,"uDimensions"),i),r.uniform3fv(r.getCachedUniformLocation(n,"uClipBoxMin"),s.min),r.uniform3fv(r.getCachedUniformLocation(n,"uClipBoxMax"),s.max),r.uniform3fv(r.getCachedUniformLocation(n,"uLightPosition"),[1,1,1]),r.uniform4fv(r.getCachedUniformLocation(n,"uLightColor"),[1,1,1,1]),r.uniformMatrix4fv(r.getCachedUniformLocation(n,"uProjection"),!1,L),r.uniformMatrix4fv(r.getCachedUniformLocation(n,"uModelView"),!1,M)}function t(r,n,a,e,t,o,l,i){r.bindBuffer(r.ARRAY_BUFFER,a),r.enableVertexAttribArray(n),r.vertexAttribPointer(n,e,t,o,l,i)}function o(){"isosurface"!==F.renderer||F.isoLevel===O&&F.isoRange===U||(z=a(u,S,V,i,g,b),O=F.isoLevel,U=F.isoRange);var r=u.drawingBufferWidth,n=u.drawingBufferHeight;u.clearColor(1,1,1,1),u.clear(u.COLOR_BUFFER_BIT|u.DEPTH_BUFFER_BIT|u.STENCIL_BUFFER_BIT),u.viewport(0,0,r,n),u.enable(u.DEPTH_TEST),u.depthMask(!0),w.perspective(L,v/180*Math.PI,r/n,.1,100);var o=[Math.cos(p)*Math.cos(m)*f,Math.sin(m)*f,Math.sin(p)*Math.cos(m)*f];w.lookAt(M,o,[0,0,0],[0,-1,0]),w.translate(M,M,[-.5,-.5,-.275]),w.scale(M,M,[1,1,.55]),"volume"===F.renderer&&(e(u,E,r,n),t(u,0,D,3,u.FLOAT,!1,0,0),u.drawArrays(u.TRIANGLES,0,6)),"isosurface"===F.renderer&&(e(u,R,r,n),t(u,0,S,3,u.FLOAT,!1,0,0),t(u,1,V,3,u.FLOAT,!1,0,0),u.enable(u.CULL_FACE),u.disable(u.DEPTH_TEST),u.depthMask(!1),u.colorMask(!1,!1,!1,!1),u.enable(u.STENCIL_TEST),u.stencilFunc(u.ALWAYS,0,0),u.stencilOp(u.KEEP,u.KEEP,u.INCR),u.cullFace(u.BACK),u.drawArrays(u.TRIANGLES,0,z),u.stencilOp(u.KEEP,u.KEEP,u.DECR),u.cullFace(u.FRONT),u.drawArrays(u.TRIANGLES,0,z),u.enable(u.DEPTH_TEST),u.depthMask(!0),u.colorMask(!0,!0,!0,!0),u.stencilFunc(u.EQUAL,0,16777215),e(u,C,r,n),u.cullFace(u.FRONT),u.drawArrays(u.TRIANGLES,0,z),F.isocaps&&(e(u,R,r,n),u.stencilFunc(u.NOTEQUAL,0,16777215),u.cullFace(u.BACK),u.drawArrays(u.TRIANGLES,0,z)),u.disable(u.STENCIL_TEST),u.disable(u.CULL_FACE))}function l(){o(),requestAnimationFrame(l)}for(var i=[256,256,109],d=i[0],h=i[1],x=i[2],g=new Uint16Array(n),T=0;T<g.length;T++)g[T]=g[T]<<8&65280|g[T]>>8;for(var M=w.create(),L=w.create(),b=[[0,0,0].map(function(r){return r-1}),[d,h,x].map(function(r){return r+1})],I=new Uint8Array(d*h*x*4),P=1/0,B=-1/0,T=0;T<g.length;T++)(_=g[T])<P&&(P=_),_>B&&(B=_);for(T=0;T<g.length;T++){var _=255*Math.max(0,Math.min(1,(g[T]-1300)/2e3));I[4*T]=_,I[4*T+1]=_,I[4*T+2]=_,I[4*T+3]=_>0?255:0}var N=u.createTexture();u.activeTexture(u.TEXTURE0),u.bindTexture(u.TEXTURE_3D,N),u.texParameteri(u.TEXTURE_3D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_3D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_3D,u.TEXTURE_WRAP_R,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_3D,u.TEXTURE_BASE_LEVEL,0),u.texParameteri(u.TEXTURE_3D,u.TEXTURE_MAX_LEVEL,Math.log2(d)),u.texParameteri(u.TEXTURE_3D,u.TEXTURE_MIN_FILTER,u.LINEAR),u.texParameteri(u.TEXTURE_3D,u.TEXTURE_MAG_FILTER,u.LINEAR),u.texImage3D(u.TEXTURE_3D,0,u.RGBA,d,h,x,0,u.RGBA,u.UNSIGNED_BYTE,I);var D=u.createBuffer();u.bindBuffer(u.ARRAY_BUFFER,D),u.bufferData(u.ARRAY_BUFFER,new Float32Array([-1,1,0,-1,-1,0,1,-1,0,-1,1,0,1,-1,0,1,1,0]),u.STATIC_DRAW);var O,U,S=u.createBuffer(),V=u.createBuffer(),z=0;u.getCachedUniformLocation=function(r,n){return r.uniformLocations||(r.uniformLocations={}),r.uniformLocations[n]||(r.uniformLocations[n]=this.getUniformLocation(r,n)),r.uniformLocations[n]},window.addEventListener("resize",r("canvas-fit")(c),!1),requestAnimationFrame(l)})},{"./lib/fastIsosurface":2,"canvas-fit":3,"gl-mat4":14,"gl-vec3":40,"right-now":62}],2:[function(r,n,a){"use strict";function e(r,n,a){y.length<r.length&&(y=new Uint8Array(r.length));var e=0,t=r.length-8;for(e=0;e<t;e+=8)y[e+0]=r[e+0]>=n&&r[e+0]<=a?1:0,y[e+1]=r[e+1]>=n&&r[e+1]<=a?1:0,y[e+2]=r[e+2]>=n&&r[e+2]<=a?1:0,y[e+3]=r[e+3]>=n&&r[e+3]<=a?1:0,y[e+4]=r[e+4]>=n&&r[e+4]<=a?1:0,y[e+5]=r[e+5]>=n&&r[e+5]<=a?1:0,y[e+6]=r[e+6]>=n&&r[e+6]<=a?1:0,y[e+7]=r[e+7]>=n&&r[e+7]<=a?1:0;for(;e<r.length;e++)y[e+0]=r[e+0]>=n&&r[e+0]<=a?1:0}var t=function(){function r(r,n){var a=[],e=!0,t=!1,o=void 0;try{for(var l,i=r[Symbol.iterator]();!(e=(l=i.next()).done)&&(a.push(l.value),!n||a.length!==n);e=!0);}catch(r){t=!0,o=r}finally{try{!e&&i.return&&i.return()}finally{if(t)throw o}}return a}return function(n,a){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return r(n,a);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=[new Float32Array([]),new Float32Array([1,0,0,0,0,1,0,1,0]),new Float32Array([0,0,0,1,1,0,1,0,1]),new Float32Array([1,1,0,0,0,1,0,1,0,1,0,1,0,0,1,1,1,0]),new Float32Array([0,0,0,0,1,1,1,1,0]),new Float32Array([1,0,0,0,1,1,1,1,0,0,0,1,0,1,1,1,0,0]),new Float32Array([1,1,0,1,0,1,0,0,0,1,1,0,0,0,0,0,1,1]),new Float32Array([1,1,0,0,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,1,1]),new Float32Array([1,0,0,0,1,0,1,1,1]),new Float32Array([1,0,0,0,0,1,0,1,0,1,0,0,0,1,0,1,1,1]),new Float32Array([1,0,1,0,1,0,1,1,1,0,0,0,0,1,0,1,0,1]),new Float32Array([0,1,0,0,0,1,0,1,0,0,1,0,1,1,1,0,0,1,1,1,1,1,0,1,0,0,1]),new Float32Array([0,0,0,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0]),new Float32Array([1,0,0,1,1,1,1,0,0,1,0,0,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1]),new Float32Array([0,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,1,0,1]),new Float32Array([1,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,1]),new Float32Array([1,0,1,0,1,1,0,0,0]),new Float32Array([1,0,1,0,1,0,1,0,0,0,1,1,0,1,0,1,0,1]),new Float32Array([0,0,0,1,1,0,1,0,1,0,0,0,1,0,1,0,1,1]),new Float32Array([1,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,0,1,1,0,1,0,1,1,0]),new Float32Array([0,0,0,1,0,1,0,1,1,0,0,0,0,1,1,1,1,0]),new Float32Array([0,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,0,1,0,1]),new Float32Array([1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,1,1]),new Float32Array([1,0,1,0,1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0]),new Float32Array([1,0,0,0,1,0,1,1,1,0,0,0,1,0,1,0,1,1]),new Float32Array([0,1,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0,1,1,1]),new Float32Array([1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,1]),new Float32Array([0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1]),new Float32Array([0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0,1,0,1]),new Float32Array([1,0,0,0,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,1,0,1]),new Float32Array([1,0,1,0,1,1,0,0,0,1,0,1,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0]),new Float32Array([1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1]),new Float32Array([1,0,0,1,1,1,0,0,1]),new Float32Array([1,0,0,1,1,1,0,0,1,1,0,0,0,0,1,0,1,0]),new Float32Array([0,0,0,1,1,1,0,0,1,1,1,0,1,1,1,0,0,0]),new Float32Array([0,0,1,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,1,0,1,1,0,1,1,1]),new Float32Array([1,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,1,1]),new Float32Array([1,0,0,0,1,1,1,1,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,1,1]),new Float32Array([0,0,0,1,1,1,0,0,1,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,1,1]),new Float32Array([1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,0,0,1,1,1,0,0,0,1,0,1,1,0,0,1,0,0,1,1,1,1]),new Float32Array([1,0,0,0,1,0,1,1,1,1,0,0,1,1,1,0,0,1]),new Float32Array([0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1,0,0,1,1,1]),new Float32Array([1,1,1,0,1,0,1,1,1,1,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,1,0]),new Float32Array([0,1,0,1,1,1,1,1,1,0,1,0,0,1,0,1,1,1,0,1,0,1,1,1,0,0,1,0,1,0,0,0,1,0,0,1]),new Float32Array([1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,1]),new Float32Array([0,0,1,1,0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1]),new Float32Array([1,1,1,0,0,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0]),new Float32Array([1,1,1,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,1]),new Float32Array([1,0,0,0,1,1,0,0,0,1,1,1,0,1,1,1,0,0]),new Float32Array([1,0,0,0,1,0,1,0,0,1,0,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1,0]),new Float32Array([0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,1,1,1,0,1,1]),new Float32Array([1,1,0,1,1,1,0,1,0,0,1,0,1,1,1,0,1,1]),new Float32Array([0,1,1,1,0,0,1,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0]),new Float32Array([1,0,0,1,1,1,0,1,1,1,0,0,0,1,1,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,0,1,1,0,1,1]),new Float32Array([1,1,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,1,0,1,1]),new Float32Array([0,1,1,1,1,0,1,1,0,0,1,1,1,1,0,0,1,1,0,1,1,1,1,0,1,1,1]),new Float32Array([1,0,0,0,1,1,0,0,0,1,0,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0]),new Float32Array([1,1,1,1,0,0,0,1,0,1,0,0,1,1,1,1,0,0,1,1,1,0,1,0,1,0,0,1,1,1,0,1,1,0,1,0]),new Float32Array([0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0]),new Float32Array([0,1,0,1,1,1,1,1,1,0,1,0,1,1,1,0,1,0,0,1,0,1,1,1,0,1,1]),new Float32Array([1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,1,1]),new Float32Array([1,1,1,0,1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,1,1,0,1,1,1,0,0,1,0,0,1,0,0,1,1,1,0,1,1,1,1,1,1,0,0]),new Float32Array([0,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0]),new Float32Array([0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1]),new Float32Array([0,0,1,1,1,1,0,1,0]),new Float32Array([0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,1,1,1]),new Float32Array([0,0,0,1,1,0,1,0,1,0,1,0,0,0,1,1,1,1]),new Float32Array([0,0,1,1,1,0,1,0,1,0,0,1,0,1,0,1,1,0,0,1,0,0,0,1,1,1,1]),new Float32Array([0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,1]),new Float32Array([0,0,1,1,0,0,0,0,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,1,0,0]),new Float32Array([1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,1]),new Float32Array([1,1,0,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,0,0,1,0,0,1,0,0,1,1,1,1]),new Float32Array([1,1,1,1,0,0,0,1,0,1,1,1,0,1,0,0,0,1]),new Float32Array([1,0,0,0,1,0,1,1,1,0,1,0,1,0,0,0,0,1,1,1,1,0,1,0,0,0,1]),new Float32Array([0,1,0,1,0,1,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,0,1]),new Float32Array([1,1,1,0,1,0,0,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,1]),new Float32Array([1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1]),new Float32Array([1,1,1,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1]),new Float32Array([0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,1,1,1,1,1,0,1]),new Float32Array([1,1,1,0,0,0,1,0,1,0,1,0,0,0,0,1,1,1]),new Float32Array([0,1,0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,1,1,0,0,1,0,1,1,1,1]),new Float32Array([0,0,0,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0,1,1,0]),new Float32Array([1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,0,1,0,0,1,0,1,1,1]),new Float32Array([0,0,0,1,1,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,0]),new Float32Array([1,0,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,0]),new Float32Array([1,1,0,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0]),new Float32Array([1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1]),new Float32Array([1,1,1,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,0,1,0,1,1,1,1,0,0]),new Float32Array([1,0,0,0,1,0,1,1,1,0,1,0,1,0,0,0,1,0,1,0,0,1,1,1,0,1,0,1,0,0,1,0,1,1,1,1]),new Float32Array([1,0,1,0,1,0,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,1,0,1]),new Float32Array([1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,1,1,1,1,0,1,1,1,1,0,1,0]),new Float32Array([0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0]),new Float32Array([1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1]),new Float32Array([1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0]),new Float32Array([1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1]),new Float32Array([0,0,1,1,0,0,1,1,1,0,0,1,1,1,1,0,1,0]),new Float32Array([1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,1,1,1,0,1,0,0,0,1,1,1,1]),new Float32Array([1,1,1,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,0,1,0]),new Float32Array([0,1,0,0,0,1,1,1,1,0,0,1,0,1,0,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0,1,1,0,1,1,1]),new Float32Array([0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0]),new Float32Array([1,0,0,1,1,1,0,0,1,1,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,0,1,0,0,1]),new Float32Array([0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,0,0,1,0,0,0]),new Float32Array([1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,0,0,1,1,1,0,1,1,0,0,0,1,0,0,1,0,0,1,1,1,1,1,1,0,1,1,1,0,0,1]),new Float32Array([1,0,0,1,1,1,0,0,1,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,1,0]),new Float32Array([1,1,1,0,1,0,0,0,1,1,0,0,0,1,0,1,1,1,1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,1,1,1]),new Float32Array([0,0,1,1,1,1,0,1,0,1,1,1,0,0,1,1,1,1,0,0,1,0,1,0,1,1,1,0,0,1,0,0,0,0,1,0]),new Float32Array([0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,1,1]),new Float32Array([1,0,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1]),new Float32Array([1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,1,1,0,0,1]),new Float32Array([0,0,1,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1]),new Float32Array([0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,1,1,1,1]),new Float32Array([1,1,1,1,0,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,0,0,0,0,1,0,0]),new Float32Array([0,1,0,1,1,1,0,1,0,1,0,0,1,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1]),new Float32Array([0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,0]),new Float32Array([1,1,1,0,1,0,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,0,1,0,1,1,0]),new Float32Array([1,1,1,0,0,0,1,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0]),new Float32Array([1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,1,1,1,1,1,0]),new Float32Array([1,1,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0]),new Float32Array([1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1]),new Float32Array([1,0,0,0,1,0,1,1,1,1,0,0,1,1,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1]),new Float32Array([1,0,0,0,1,0,0,1,0,1,0,0,1,1,1,0,1,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,1,1]),new Float32Array([0,1,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,1,0,1,1,1]),new Float32Array([1,1,1,0,1,0,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,1,0,1,0]),new Float32Array([1,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,1,1,1]),new Float32Array([1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1]),new Float32Array([1,1,1,1,1,1,1,1,1]),new Float32Array([1,1,0,0,1,1,1,0,1]),new Float32Array([1,0,0,0,0,1,0,1,0,1,0,1,1,1,0,0,1,1]),new Float32Array([1,0,1,0,0,0,1,1,0,1,0,1,1,1,0,0,1,1]),new Float32Array([1,1,0,0,0,1,0,1,0,1,1,0,1,0,1,0,0,1,1,0,1,1,1,0,0,1,1]),new Float32Array([1,1,0,0,0,0,0,1,1,1,1,0,0,1,1,1,0,1]),new Float32Array([0,1,1,1,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,1,1,0,1]),new Float32Array([0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,0,1,1,1,0,1,1,1,0,0,1,1]),new Float32Array([1,0,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,0,1,0,1,0,0,1,0,1,1]),new Float32Array([1,0,0,0,1,1,1,0,1,0,1,0,0,1,1,1,0,0]),new Float32Array([1,0,0,0,1,1,1,0,1,1,0,0,0,1,0,0,1,1,0,1,0,1,0,0,0,0,1]),new Float32Array([1,0,1,0,1,1,1,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,1,1]),new Float32Array([1,0,1,1,0,1,0,0,1,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,1,0,0,0,1]),new Float32Array([0,1,1,0,0,0,0,1,1,0,1,1,1,0,1,0,0,0,1,0,1,1,0,0,0,0,0]),new Float32Array([1,0,0,0,0,1,0,1,1,1,0,0,0,1,1,1,0,1,1,0,0,1,0,1,1,0,0,1,0,1,0,1,1,0,1,1]),new Float32Array([0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,1,0,0,0,1,0,1,1,0,1]),new Float32Array([0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,1,1,0,1,0,0,1]),new Float32Array([1,0,1,1,1,0,0,1,1,1,0,1,0,1,1,0,0,0]),new Float32Array([1,0,1,0,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,1,1,1,0,1,1,1,0]),new Float32Array([1,1,0,1,0,1,0,0,0,1,0,1,1,1,0,0,1,1,0,0,0,1,0,1,0,1,1]),new Float32Array([1,1,0,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,1,0,0,1,1,0,1,0,0,1,1,1,0,1,1,0,1]),new Float32Array([0,0,0,0,1,1,1,1,0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1,1,0,1]),new Float32Array([1,0,1,1,1,0,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,0,1,1,0,0,1,1,0,1,1]),new Float32Array([0,0,0,1,1,0,1,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,1,0,1,1,1,0,0,1,1]),new Float32Array([1,0,1,1,1,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,1,1,0,1,0,1,1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,0,1,1]),new Float32Array([0,1,1,1,0,0,0,1,0,0,1,1,1,0,1,1,0,0,1,0,1,0,1,1,0,0,0]),new Float32Array([1,0,0,0,1,0,1,0,1,1,0,1,0,1,0,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,1]),new Float32Array([0,0,0,1,0,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,0,0,1,1,1,0,1,0,0,0,0,1,0,0,1,1]),new Float32Array([0,1,1,0,1,0,1,0,1,0,1,1,1,0,1,1,0,1,0,1,0,0,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,0,0,1,1,1,0,1]),new Float32Array([0,0,0,1,0,1,0,1,1,0,0,0,0,1,1,1,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,1,0,1,1]),new Float32Array([1,0,1,1,0,0,0,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,1,0,1,1,1,0,1,1,0,0,1,0,1,0,1,1]),new Float32Array([0,0,0,1,0,1,1,0,1,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1]),new Float32Array([0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,1,1,0,1]),new Float32Array([1,1,0,0,0,1,1,0,0,0,1,1,0,0,1,1,1,0]),new Float32Array([0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,0,1,0]),new Float32Array([1,1,0,0,0,0,1,1,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,0,0,0]),new Float32Array([0,0,1,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,0,0,1,0,1,1,0,0,1,0,1,1,1,1,0,1,1,0]),new Float32Array([1,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,1,1,1,1,0,0,0,0]),new Float32Array([1,0,0,0,0,1,1,1,0,1,1,0,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,1,0,0,1,1]),new Float32Array([0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,0,1,1,1,1,0,1,1,0]),new Float32Array([0,1,1,0,0,1,1,1,0,0,1,1,1,1,0,1,1,0,0,0,1,0,0,1,1,1,0,1,1,0,1,1,0,0,1,1,0,0,1,0,1,1,1,1,0]),new Float32Array([1,0,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,0,1]),new Float32Array([0,1,0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1]),new Float32Array([0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1]),new Float32Array([0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1]),new Float32Array([1,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,1,0,1,1,0,0,0]),new Float32Array([0,0,1,0,1,1,1,0,0,0,0,1,1,0,0,1,0,0,0,1,1,0,1,1,1,0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0]),new Float32Array([0,0,0,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1]),new Float32Array([0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1]),new Float32Array([0,1,1,1,1,0,0,1,1,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,1,1,0]),new Float32Array([1,0,0,0,1,1,0,1,0,1,0,0,1,1,0,0,1,1,1,0,0,1,0,0,1,1,0,0,1,1,0,1,1,1,1,0]),new Float32Array([1,1,0,0,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0]),new Float32Array([1,1,0,0,1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,1,1,0,1,0]),new Float32Array([1,1,0,0,0,0,0,1,1,1,1,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,1]),new Float32Array([1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,1]),new Float32Array([1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,0,0,0,0,1,1]),new Float32Array([0,1,1,1,1,0,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,1,1,1,0]),new Float32Array([1,0,0,0,1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,1]),new Float32Array([0,1,0,0,1,1,1,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,1,1,1,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,1,0,1,0,0]),new Float32Array([0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,0,0,1,0]),new Float32Array([0,1,1,0,1,0,0,1,0,0,1,1,0,1,1,0,1,0]),new Float32Array([0,0,0,1,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,1,1]),new Float32Array([1,0,0,1,0,0,1,0,0,0,1,1,0,1,1,0,1,1]),new Float32Array([0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,0]),new Float32Array([0,1,1,0,1,1,0,1,1]),new Float32Array([0,1,0,1,0,1,1,1,0,0,0,1,1,0,1,0,1,0]),new Float32Array([0,1,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,0,1,0,1,0,1,0,0]),new Float32Array([1,0,1,0,1,0,0,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1,0,1,0,0,0]),new Float32Array([1,1,0,0,0,1,1,0,1,1,1,0,0,1,0,0,0,1,1,0,1,0,0,1,1,1,0,0,0,1,0,1,0,1,1,0]),new Float32Array([1,1,0,1,0,1,1,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1]),new Float32Array([0,0,1,1,1,0,1,0,0,0,0,1,1,0,1,1,1,0,0,0,1,0,0,1,1,0,1,1,1,0,1,1,0,1,0,1]),new Float32Array([1,0,1,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1,1,0]),new Float32Array([1,0,1,0,0,1,1,1,0,1,0,1,1,1,0,1,1,0,0,0,1,0,0,1,1,1,0,1,1,0,1,1,0,1,0,1,0,0,1,1,0,1,1,1,0]),new Float32Array([0,1,0,1,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,0]),new Float32Array([1,0,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0,1,0,1,0,0,1,0]),new Float32Array([1,0,1,0,0,1,1,0,1,1,0,1,0,1,0,0,0,1,1,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1]),new Float32Array([0,0,1,1,0,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,1,0,1,0,0,1,0,1,0]),new Float32Array([1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1]),new Float32Array([1,0,0,0,0,1,0,0,1,1,0,0,0,0,1,1,0,0,1,0,0,0,0,1,1,0,1]),new Float32Array([1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,0,0,0,0,0,1]),new Float32Array([1,0,1,0,0,1,0,0,1,1,0,1,1,0,1,0,0,1]),new Float32Array([1,0,1,0,0,0,1,0,1,1,0,1,1,1,0,0,0,0,1,1,0,0,1,0,0,0,0]),new Float32Array([1,0,1,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0,0,1,0,0,1,0,1,0,0]),new Float32Array([0,0,0,1,1,0,1,0,1,0,0,0,1,0,1,1,1,0,0,0,0,1,1,0,0,1,0,1,1,0,1,0,1,1,0,1]),new Float32Array([1,1,0,0,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,0,1,0,1,0,1,1,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1,0,1]),new Float32Array([1,1,0,1,0,1,1,1,0,0,0,0,1,0,1,1,1,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,1,0,1]),new Float32Array([1,0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,1,1,0,1,0,0]),new Float32Array([0,0,0,1,1,0,1,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,1,0,1,0,1]),new Float32Array([1,0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,1,1,0]),new Float32Array([0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,1,1,0,1,0,0,0]),new Float32Array([1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,1,1,0,0,0,1,0]),new Float32Array([0,0,0,0,1,0,1,0,1,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,1,0,1,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,1,0,1]),new Float32Array([1,0,1,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0]),new Float32Array([0,0,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,1,0,0]),new Float32Array([1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1]),new Float32Array([0,0,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1]),new Float32Array([1,0,1,1,0,1,1,0,1]),new Float32Array([0,0,1,0,1,0,0,0,1,0,0,1,1,0,0,0,1,0,1,0,0,1,1,0,0,1,0]),new Float32Array([1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,0]),new Float32Array([1,1,0,1,1,0,0,1,0,1,1,0,0,1,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0]),new Float32Array([0,1,0,1,1,0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,0,1,1,0,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,0,1,0,0,0,1]),new Float32Array([1,1,0,1,0,0,1,1,0,1,1,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0]),new Float32Array([1,0,0,1,1,0,0,0,1,1,0,0,0,0,1,0,0,1,1,1,0,1,1,0,0,0,1,0,0,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1]),new Float32Array([0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,1,1,0,0,0,1,0,0,1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0]),new Float32Array([1,1,0,1,1,0,1,1,0,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0]),new Float32Array([1,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,1,0]),new Float32Array([0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0]),new Float32Array([0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1]),new Float32Array([0,0,1,1,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0]),new Float32Array([0,0,1,1,0,0,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,0,0,1,1,0,0]),new Float32Array([0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0]),new Float32Array([0,0,1,0,0,1,0,0,1]),new Float32Array([1,0,0,1,1,0,0,0,0,1,1,0,0,1,0,0,0,0]),new Float32Array([0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1,1,0]),new Float32Array([0,0,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,1,0]),new Float32Array([0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0]),new Float32Array([1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,0,0,1,0,0]),new Float32Array([1,0,0,1,1,0,1,1,0,1,0,0,1,0,0,1,1,0]),new Float32Array([1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1,0,0,0,0]),new Float32Array([1,1,0,1,1,0,1,1,0]),new Float32Array([1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0]),new Float32Array([0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0]),new Float32Array([0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0]),new Float32Array([0,1,0,0,1,0,0,1,0]),new Float32Array([1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0]),new Float32Array([1,0,0,1,0,0,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([])],l=[new Float32Array([]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1]),new Float32Array([0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1]),new Float32Array([-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([1,1,-1,1,1,-1,1,1,-1]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,1,1,-1]),new Float32Array([1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,-1,-1,1,-1,-1,1,-1,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,-1,1,1,-1,1,1,-1,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([-1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,-1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,1,1,-1,1,1,-1,1,1,-1]),new Float32Array([1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([1,0,-1,1,0,-1,1,0,-1,-1,-1,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([0,1,-1,0,1,-1,0,1,-1,-1,-1,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([-1,-1,1,-1,-1,1,-1,-1,1,1,1,-1,1,1,-1,1,1,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([1,-1,1,1,-1,1,1,-1,1]),new Float32Array([1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1]),new Float32Array([1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([1,-1,1,1,-1,1,1,-1,1,-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,1,-1,1,1,-1,1,1,-1,1]),new Float32Array([1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,0,1,-1,0,1,-1,0,-1,0,-1,-1,0,-1,-1,0,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,-1,1,1,-1,1,1,-1,1,-1,1,1,-1,1,1,-1,1]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,1,1,-1,1,-1,1,1,-1,1,1,-1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1,1,0,0,1,0,0,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,1,-1,1,1,-1,1,1,-1,1]),new Float32Array([1,-1,1,1,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,-1,1,-1,-1,1,-1,-1,1,-1,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([1,-1,0,1,-1,0,1,-1,0,0,1,-1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,1,-1,-1,1,-1,-1,1,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,1,1,-1,1,1,-1,1,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([0,-1,1,0,-1,1,0,-1,1,-1,0,-1,-1,0,-1,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([-1,1,-1,-1,1,-1,-1,1,-1,0,0,0,0,0,0,0,0,0,1,-1,1,1,-1,1,1,-1,1,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,1,1,-1,1,1,-1,1,1,-1]),new Float32Array([1,1,-1,1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,-1,-1,1,-1,-1,1,-1,-1,1,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,0,-1,1,0,-1,1,0,-1,0,-1,1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1]),new Float32Array([0,-1,1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,1,-1,0,1,-1]),new Float32Array([0,1,-1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,-1,1,0,-1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([-1,1,1,-1,1,1,-1,1,1]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,-1,-1,1,-1,-1,1,-1,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,1,-1,-1,1,-1,-1,1,-1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,0,-1,1,0,-1,1,0,0,-1,-1,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,-1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([1,1,-1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([-1,1,1,-1,1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,-1,-1,1,-1,-1,1,-1,0,1,0,0,1,0,0,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,-1,-1,1,-1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,0,-1,1,0,-1,1,0,1,0,-1,1,0,-1,1,0,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,1,-1,-1,1,-1,-1,1,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,1,-1,-1,1,-1,-1,1,-1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,0,1,-1,0,1,-1,0,1,0,-1,-1,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,1,-1,1,1,-1,1,1,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,1,1,-1,1,1,-1,1,1,-1,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,1,1,-1,1,1,-1,1,1,-1]),new Float32Array([1,1,-1,1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,-1,-1,1,-1,-1,1,-1,-1,1,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1]),new Float32Array([1,0,-1,1,0,-1,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,1,-1,0,1,-1,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,1,-1,0,1,-1,0,1,-1,-1,0,1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([-1,0,1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,1,0,-1,1,0,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,-1,1,1,-1,1,1,-1,1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,1,-1,1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([-1,1,1,-1,1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,1,-1,1,1,-1,1,1,-1,1]),new Float32Array([1,-1,1,1,-1,1,1,-1,1,-1,1,-1,-1,1,-1,-1,1,-1,-1,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,-1,1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0,1,-1,0]),new Float32Array([-1,1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,1,-1,0,1,-1,0]),new Float32Array([1,-1,1,1,-1,1,1,-1,1,1,1,-1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([-1,1,1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,1,-1,1]),new Float32Array([-1,1,1,-1,1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1,1,0,0,1,0,0,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,1,-1,1,1,-1,1,1]),new Float32Array([1,-1,1,1,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,-1,1,-1,-1,1,-1,-1,1,-1,0,1,0,0,1,0,0,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,-1,-1,1,-1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,1,-1,1,1,-1,1]),new Float32Array([1,-1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,-1,1,0,-1,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,1,-1,-1,1,-1,-1,1,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,1,-1,-1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,0,1,-1,0,1,-1,0,1,1,-1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([0,-1,1,0,-1,1,0,-1,1,-1,1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([1,-1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,-1,1,0,-1,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,-1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,1,-1,-1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,-1,1,1,-1,1,1,-1]),new Float32Array([-1,0,1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,1,0,-1,1,0,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,1,-1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0,-1,1,0,-1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,1,1,1,1,1,1,1]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,1,1]),new Float32Array([0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,1,1,1,1,1,1,1,1,1]),new Float32Array([-1,1,-1,-1,1,-1,-1,1,-1,1,1,1,1,1,1,1,1,1]),new Float32Array([-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,1,1,1,1,1,1,1,1,1]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1,1,1,1,1,1,1,1,1,1]),new Float32Array([1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0]),new Float32Array([1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,-1,1,1,-1,1,1,-1,1,0,0,1,0,0,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,-1,-1,0,-1,-1,0,-1,-1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,-1,1,1,-1,1,1,-1,0,1,0,0,1,0,0,1,0]),new Float32Array([-1,0,-1,-1,0,-1,-1,0,-1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,-1,1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1]),new Float32Array([1,1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,1,1,1,1,1,1,1,1,1]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0]),new Float32Array([-1,1,-1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,1,1,1]),new Float32Array([1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,-1,1,-1,1,1,1,1,1,1,1,1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1]),new Float32Array([1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0]),new Float32Array([-1,-1,1,-1,-1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,1,-1,1,1,-1,1,1,-1,1,0,0,1,0,0,1,0,0]),new Float32Array([-1,-1,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0]),new Float32Array([-1,-1,1,-1,-1,1,-1,-1,1,1,1,-1,1,1,-1,1,1,-1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,-1,-1,0,-1,-1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,-1,1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,1,-1,-1,1,-1,-1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1]),new Float32Array([1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,1,1,-1,1,1,-1,1,1,0,0,1,0,0,1,0,0]),new Float32Array([0,-1,-1,0,-1,-1,0,-1,-1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1]),new Float32Array([-1,1,-1,-1,1,-1,-1,1,-1,1,-1,1,1,-1,1,1,-1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,-1,-1,0,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0]),new Float32Array([1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0]),new Float32Array([1,0,1,1,0,1,1,0,1,0,1,-1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([-1,0,-1,-1,0,-1,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,1,1,-1,1,1,-1,1,0,0,1,0,0,1,0,0,1]),new Float32Array([-1,-1,0,-1,-1,0,-1,-1,0,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,1,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0]),new Float32Array([-1,1,-1,-1,1,-1,-1,1,-1,1,-1,1,1,-1,1,1,-1,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0]),new Float32Array([-1,0,-1,-1,0,-1,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,-1,1,1,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,-1,-1,1,-1,-1,1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,0,1,1,0,1,1,0,0,-1,1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,-1,-1,0,-1,-1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,-1,1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,1,-1,0,1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1]),new Float32Array([0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1]),new Float32Array([0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,-1,-1,1,-1,-1,1,-1,-1]),new Float32Array([0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1,0,-1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,1,-1,1,1,-1,1,1,0,1,0,0,1,0,0,1,0]),new Float32Array([-1,0,-1,-1,0,-1,-1,0,-1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,1,1,-1,1,1,-1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,-1,-1,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,0,-1,1,0,-1,1,0,-1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,-1,-1,0,-1,-1]),new Float32Array([0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,1,-1,1,1,-1,1,1,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,-1,0,-1,-1,0,-1,-1,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0]),new Float32Array([1,-1,-1,1,-1,-1,1,-1,-1,-1,1,1,-1,1,1,-1,1,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0]),new Float32Array([0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,-1,-1,0,-1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,1,-1,1,1,-1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,-1,1,1,-1,1,1,-1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,1,-1,-1,1,-1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,1,0,1,1,0,1,1,0,-1,0,1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([-1,-1,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0]),new Float32Array([1,0,-1,1,0,-1,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,1,-1,0,1,-1,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,1]),new Float32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,-1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,-1,-1,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1]),new Float32Array([0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,-1,1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0]),new Float32Array([1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,-1,0,-1,-1,0,-1]),new Float32Array([-1,1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,1,-1,0,1,-1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([0,0,0,0,0,0,0,0,0]),new Float32Array([])],i=o.map(function(r){return r.length}),c=function(r,n,a,e,i){var c,u,y,w,A,F,s=t(e,3),f=(s[0],s[1],s[2],t(i[0],3)),v=f[0],p=f[1],m=f[2],d=t(i[1],3),h=d[0],x=d[1],g=d[2];h--,x--,g--;var T=0,M=0,E=0,C=0,R=0,L=0;for(F=m;F<g;F++)for(A=p;A<x;A++)for(w=v;w<h;w++,M++)for(c=r[M],u=o[c],y=l[c],L=u.length,T=0,R=0;T<L;)a[C++]=y[R++],a[C++]=y[R++],a[C++]=y[R++],a[C++]=y[R++],a[C++]=y[R++],a[C++]=y[R++],a[C++]=y[R++],a[C++]=y[R++],a[C++]=y[R++],n[E++]=u[T++]+w,n[E++]=u[T++]+A,n[E++]=u[T++]+F,n[E++]=u[T++]+w,n[E++]=u[T++]+A,n[E++]=u[T++]+F,n[E++]=u[T++]+w,n[E++]=u[T++]+A,n[E++]=u[T++]+F},u=function(r,n,a,e){var o,l,c,u=t(n,3),y=u[0],w=u[1],A=(u[2],t(e[0],3)),F=A[0],s=A[1],f=A[2],v=t(e[1],3),p=v[0],m=v[1],d=v[2],h=y*w,x=y;m--,d--;var g,T,M,E,C,R,L,b,I,P,B,_,N,D=--p-4,O=0,U=0;for(c=f;c<d;c++)for((g=c*h)+h,l=s;l<m;l++){for(E=(T=g+l*x+F)+h+F,C=(M=T+x+F)+h+F,R=a[T++],L=a[M++],b=a[E++],I=a[C++],o=F;o<D;o+=4,U+=4)P=0,B=0,_=0,N=0,P+=1*R,P+=4*L,P+=16*b,P+=64*I,P+=2*(R=a[T++]),P+=8*(L=a[M++]),P+=32*(b=a[E++]),P+=128*(I=a[C++]),B+=1*R,B+=4*L,B+=16*b,B+=64*I,B+=2*(R=a[T++]),B+=8*(L=a[M++]),B+=32*(b=a[E++]),B+=128*(I=a[C++]),_+=1*R,_+=4*L,_+=16*b,_+=64*I,_+=2*(R=a[T++]),_+=8*(L=a[M++]),_+=32*(b=a[E++]),_+=128*(I=a[C++]),N+=1*R,N+=4*L,N+=16*b,N+=64*I,N+=2*(R=a[T++]),N+=8*(L=a[M++]),N+=32*(b=a[E++]),N+=128*(I=a[C++]),r[U+0]=P,r[U+1]=B,r[U+2]=_,r[U+3]=N,O+=i[P],O+=i[B],O+=i[_],O+=i[N];for(;o<p;o++,U++)P=0,B=0,_=0,N=0,P+=1*R,P+=4*L,P+=16*b,P+=64*I,P+=2*(R=a[T++]),P+=8*(L=a[M++]),P+=32*(b=a[E++]),P+=128*(I=a[C++]),r[U+0]=P,O+=i[P]}return O},y=new Uint8Array(1e6),w=new Uint8Array(1e6);a.marchingCubes=function(r,n,a,o,l){console.log("---"),console.time("marchingCubes"),l||(l=[[0,0,0],r]);var i=t(l[0],3),A=i[0],F=i[1],s=i[2],f=t(l[1],3),v=f[0],p=f[1],m=f[2];console.time("Munch data"),e(n,a,o),console.timeEnd("Munch data"),console.time("Construct cube indices");var d=(m-s-1)*(p-F-1)*(v-A-1);w.length<d&&(w=new Uint8Array(d));var h=u(w,r,y,l);console.timeEnd("Construct cube indices"),console.time("Fill vertex arrays");var x=new Float32Array(h),g=new Float32Array(h);return c(w,x,g,r,l),console.timeEnd("Fill vertex arrays"),console.timeEnd("marchingCubes"),{vertices:x,normals:g}}},{}],3:[function(r,n,a){var e=r("element-size");n.exports=function(r,n,a){function o(){var n=o.parent||r.parentNode;if("function"==typeof n)var a=n(t)||t,i=a[0],c=a[1];else if(n&&n!==document.body)var u=e(n),i=0|u[0],c=0|u[1];else var i=window.innerWidth,c=window.innerHeight;return l?(r.setAttribute("width",i*o.scale+"px"),r.setAttribute("height",c*o.scale+"px")):(r.width=i*o.scale,r.height=c*o.scale),r.style.width=i+"px",r.style.height=c+"px",o}var l="SVG"===r.nodeName.toUpperCase();return r.style.position=r.style.position||"absolute",r.style.top=0,r.style.left=0,o.scale=parseFloat(a||1),o.parent=n,o()};var t=new Float32Array(2)},{"element-size":4}],4:[function(r,n,a){function e(r){return parseFloat(r)||0}n.exports=function(r){if(r===window||r===document.body)return[window.innerWidth,window.innerHeight];if(!r.parentNode){var n=!0;document.body.appendChild(r)}var a=r.getBoundingClientRect(),t=getComputedStyle(r),o=(0|a.height)+e(t.getPropertyValue("margin-top"))+e(t.getPropertyValue("margin-bottom")),l=(0|a.width)+e(t.getPropertyValue("margin-left"))+e(t.getPropertyValue("margin-right"));return n&&document.body.removeChild(r),[l,o]}},{}],5:[function(r,n,a){n.exports=function(r,n){var a=n[0],e=n[1],t=n[2],o=n[3],l=n[4],i=n[5],c=n[6],u=n[7],y=n[8],w=n[9],A=n[10],F=n[11],s=n[12],f=n[13],v=n[14],p=n[15];return r[0]=i*(A*p-F*v)-w*(c*p-u*v)+f*(c*F-u*A),r[1]=-(e*(A*p-F*v)-w*(t*p-o*v)+f*(t*F-o*A)),r[2]=e*(c*p-u*v)-i*(t*p-o*v)+f*(t*u-o*c),r[3]=-(e*(c*F-u*A)-i*(t*F-o*A)+w*(t*u-o*c)),r[4]=-(l*(A*p-F*v)-y*(c*p-u*v)+s*(c*F-u*A)),r[5]=a*(A*p-F*v)-y*(t*p-o*v)+s*(t*F-o*A),r[6]=-(a*(c*p-u*v)-l*(t*p-o*v)+s*(t*u-o*c)),r[7]=a*(c*F-u*A)-l*(t*F-o*A)+y*(t*u-o*c),r[8]=l*(w*p-F*f)-y*(i*p-u*f)+s*(i*F-u*w),r[9]=-(a*(w*p-F*f)-y*(e*p-o*f)+s*(e*F-o*w)),r[10]=a*(i*p-u*f)-l*(e*p-o*f)+s*(e*u-o*i),r[11]=-(a*(i*F-u*w)-l*(e*F-o*w)+y*(e*u-o*i)),r[12]=-(l*(w*v-A*f)-y*(i*v-c*f)+s*(i*A-c*w)),r[13]=a*(w*v-A*f)-y*(e*v-t*f)+s*(e*A-t*w),r[14]=-(a*(i*v-c*f)-l*(e*v-t*f)+s*(e*c-t*i)),r[15]=a*(i*A-c*w)-l*(e*A-t*w)+y*(e*c-t*i),r}},{}],6:[function(r,n,a){n.exports=function(r){var n=new Float32Array(16);return n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],n[4]=r[4],n[5]=r[5],n[6]=r[6],n[7]=r[7],n[8]=r[8],n[9]=r[9],n[10]=r[10],n[11]=r[11],n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15],n}},{}],7:[function(r,n,a){n.exports=function(r,n){return r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r[4]=n[4],r[5]=n[5],r[6]=n[6],r[7]=n[7],r[8]=n[8],r[9]=n[9],r[10]=n[10],r[11]=n[11],r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15],r}},{}],8:[function(r,n,a){n.exports=function(){var r=new Float32Array(16);return r[0]=1,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=1,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}},{}],9:[function(r,n,a){n.exports=function(r){var n=r[0],a=r[1],e=r[2],t=r[3],o=r[4],l=r[5],i=r[6],c=r[7],u=r[8],y=r[9],w=r[10],A=r[11],F=r[12],s=r[13],f=r[14],v=r[15];return(n*l-a*o)*(w*v-A*f)-(n*i-e*o)*(y*v-A*s)+(n*c-t*o)*(y*f-w*s)+(a*i-e*l)*(u*v-A*F)-(a*c-t*l)*(u*f-w*F)+(e*c-t*i)*(u*s-y*F)}},{}],10:[function(r,n,a){n.exports=function(r,n){var a=n[0],e=n[1],t=n[2],o=n[3],l=a+a,i=e+e,c=t+t,u=a*l,y=e*l,w=e*i,A=t*l,F=t*i,s=t*c,f=o*l,v=o*i,p=o*c;return r[0]=1-w-s,r[1]=y+p,r[2]=A-v,r[3]=0,r[4]=y-p,r[5]=1-u-s,r[6]=F+f,r[7]=0,r[8]=A+v,r[9]=F-f,r[10]=1-u-w,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}},{}],11:[function(r,n,a){n.exports=function(r,n,a){var e=n[0],t=n[1],o=n[2],l=n[3],i=e+e,c=t+t,u=o+o,y=e*i,w=e*c,A=e*u,F=t*c,s=t*u,f=o*u,v=l*i,p=l*c,m=l*u;return r[0]=1-(F+f),r[1]=w+m,r[2]=A-p,r[3]=0,r[4]=w-m,r[5]=1-(y+f),r[6]=s+v,r[7]=0,r[8]=A+p,r[9]=s-v,r[10]=1-(y+F),r[11]=0,r[12]=a[0],r[13]=a[1],r[14]=a[2],r[15]=1,r}},{}],12:[function(r,n,a){n.exports=function(r,n,a,e,t,o,l){var i=1/(a-n),c=1/(t-e),u=1/(o-l);return r[0]=2*o*i,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=2*o*c,r[6]=0,r[7]=0,r[8]=(a+n)*i,r[9]=(t+e)*c,r[10]=(l+o)*u,r[11]=-1,r[12]=0,r[13]=0,r[14]=l*o*2*u,r[15]=0,r}},{}],13:[function(r,n,a){n.exports=function(r){return r[0]=1,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=1,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}},{}],14:[function(r,n,a){n.exports={create:r("./create"),clone:r("./clone"),copy:r("./copy"),identity:r("./identity"),transpose:r("./transpose"),invert:r("./invert"),adjoint:r("./adjoint"),determinant:r("./determinant"),multiply:r("./multiply"),translate:r("./translate"),scale:r("./scale"),rotate:r("./rotate"),rotateX:r("./rotateX"),rotateY:r("./rotateY"),rotateZ:r("./rotateZ"),fromRotationTranslation:r("./fromRotationTranslation"),fromQuat:r("./fromQuat"),frustum:r("./frustum"),perspective:r("./perspective"),perspectiveFromFieldOfView:r("./perspectiveFromFieldOfView"),ortho:r("./ortho"),lookAt:r("./lookAt"),str:r("./str")}},{"./adjoint":5,"./clone":6,"./copy":7,"./create":8,"./determinant":9,"./fromQuat":10,"./fromRotationTranslation":11,"./frustum":12,"./identity":13,"./invert":15,"./lookAt":16,"./multiply":17,"./ortho":18,"./perspective":19,"./perspectiveFromFieldOfView":20,"./rotate":21,"./rotateX":22,"./rotateY":23,"./rotateZ":24,"./scale":25,"./str":26,"./translate":27,"./transpose":28}],15:[function(r,n,a){n.exports=function(r,n){var a=n[0],e=n[1],t=n[2],o=n[3],l=n[4],i=n[5],c=n[6],u=n[7],y=n[8],w=n[9],A=n[10],F=n[11],s=n[12],f=n[13],v=n[14],p=n[15],m=a*i-e*l,d=a*c-t*l,h=a*u-o*l,x=e*c-t*i,g=e*u-o*i,T=t*u-o*c,M=y*f-w*s,E=y*v-A*s,C=y*p-F*s,R=w*v-A*f,L=w*p-F*f,b=A*p-F*v,I=m*b-d*L+h*R+x*C-g*E+T*M;return I?(I=1/I,r[0]=(i*b-c*L+u*R)*I,r[1]=(t*L-e*b-o*R)*I,r[2]=(f*T-v*g+p*x)*I,r[3]=(A*g-w*T-F*x)*I,r[4]=(c*C-l*b-u*E)*I,r[5]=(a*b-t*C+o*E)*I,r[6]=(v*h-s*T-p*d)*I,r[7]=(y*T-A*h+F*d)*I,r[8]=(l*L-i*C+u*M)*I,r[9]=(e*C-a*L-o*M)*I,r[10]=(s*g-f*h+p*m)*I,r[11]=(w*h-y*g-F*m)*I,r[12]=(i*E-l*R-c*M)*I,r[13]=(a*R-e*E+t*M)*I,r[14]=(f*d-s*x-v*m)*I,r[15]=(y*x-w*d+A*m)*I,r):null}},{}],16:[function(r,n,a){var e=r("./identity");n.exports=function(r,n,a,t){var o,l,i,c,u,y,w,A,F,s,f=n[0],v=n[1],p=n[2],m=t[0],d=t[1],h=t[2],x=a[0],g=a[1],T=a[2];return Math.abs(f-x)<1e-6&&Math.abs(v-g)<1e-6&&Math.abs(p-T)<1e-6?e(r):(w=f-x,A=v-g,F=p-T,s=1/Math.sqrt(w*w+A*A+F*F),w*=s,A*=s,F*=s,o=d*F-h*A,l=h*w-m*F,i=m*A-d*w,(s=Math.sqrt(o*o+l*l+i*i))?(o*=s=1/s,l*=s,i*=s):(o=0,l=0,i=0),c=A*i-F*l,u=F*o-w*i,y=w*l-A*o,(s=Math.sqrt(c*c+u*u+y*y))?(c*=s=1/s,u*=s,y*=s):(c=0,u=0,y=0),r[0]=o,r[1]=c,r[2]=w,r[3]=0,r[4]=l,r[5]=u,r[6]=A,r[7]=0,r[8]=i,r[9]=y,r[10]=F,r[11]=0,r[12]=-(o*f+l*v+i*p),r[13]=-(c*f+u*v+y*p),r[14]=-(w*f+A*v+F*p),r[15]=1,r)}},{"./identity":13}],17:[function(r,n,a){n.exports=function(r,n,a){var e=n[0],t=n[1],o=n[2],l=n[3],i=n[4],c=n[5],u=n[6],y=n[7],w=n[8],A=n[9],F=n[10],s=n[11],f=n[12],v=n[13],p=n[14],m=n[15],d=a[0],h=a[1],x=a[2],g=a[3];return r[0]=d*e+h*i+x*w+g*f,r[1]=d*t+h*c+x*A+g*v,r[2]=d*o+h*u+x*F+g*p,r[3]=d*l+h*y+x*s+g*m,d=a[4],h=a[5],x=a[6],g=a[7],r[4]=d*e+h*i+x*w+g*f,r[5]=d*t+h*c+x*A+g*v,r[6]=d*o+h*u+x*F+g*p,r[7]=d*l+h*y+x*s+g*m,d=a[8],h=a[9],x=a[10],g=a[11],r[8]=d*e+h*i+x*w+g*f,r[9]=d*t+h*c+x*A+g*v,r[10]=d*o+h*u+x*F+g*p,r[11]=d*l+h*y+x*s+g*m,d=a[12],h=a[13],x=a[14],g=a[15],r[12]=d*e+h*i+x*w+g*f,r[13]=d*t+h*c+x*A+g*v,r[14]=d*o+h*u+x*F+g*p,r[15]=d*l+h*y+x*s+g*m,r}},{}],18:[function(r,n,a){n.exports=function(r,n,a,e,t,o,l){var i=1/(n-a),c=1/(e-t),u=1/(o-l);return r[0]=-2*i,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=-2*c,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=2*u,r[11]=0,r[12]=(n+a)*i,r[13]=(t+e)*c,r[14]=(l+o)*u,r[15]=1,r}},{}],19:[function(r,n,a){n.exports=function(r,n,a,e,t){var o=1/Math.tan(n/2),l=1/(e-t);return r[0]=o/a,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=o,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=(t+e)*l,r[11]=-1,r[12]=0,r[13]=0,r[14]=2*t*e*l,r[15]=0,r}},{}],20:[function(r,n,a){n.exports=function(r,n,a,e){var t=Math.tan(n.upDegrees*Math.PI/180),o=Math.tan(n.downDegrees*Math.PI/180),l=Math.tan(n.leftDegrees*Math.PI/180),i=Math.tan(n.rightDegrees*Math.PI/180),c=2/(l+i),u=2/(t+o);return r[0]=c,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=u,r[6]=0,r[7]=0,r[8]=-(l-i)*c*.5,r[9]=(t-o)*u*.5,r[10]=e/(a-e),r[11]=-1,r[12]=0,r[13]=0,r[14]=e*a/(a-e),r[15]=0,r}},{}],21:[function(r,n,a){n.exports=function(r,n,a,e){var t,o,l,i,c,u,y,w,A,F,s,f,v,p,m,d,h,x,g,T,M,E,C,R,L=e[0],b=e[1],I=e[2],P=Math.sqrt(L*L+b*b+I*I);return Math.abs(P)<1e-6?null:(P=1/P,L*=P,b*=P,I*=P,t=Math.sin(a),o=Math.cos(a),l=1-o,i=n[0],c=n[1],u=n[2],y=n[3],w=n[4],A=n[5],F=n[6],s=n[7],f=n[8],v=n[9],p=n[10],m=n[11],d=L*L*l+o,h=b*L*l+I*t,x=I*L*l-b*t,g=L*b*l-I*t,T=b*b*l+o,M=I*b*l+L*t,E=L*I*l+b*t,C=b*I*l-L*t,R=I*I*l+o,r[0]=i*d+w*h+f*x,r[1]=c*d+A*h+v*x,r[2]=u*d+F*h+p*x,r[3]=y*d+s*h+m*x,r[4]=i*g+w*T+f*M,r[5]=c*g+A*T+v*M,r[6]=u*g+F*T+p*M,r[7]=y*g+s*T+m*M,r[8]=i*E+w*C+f*R,r[9]=c*E+A*C+v*R,r[10]=u*E+F*C+p*R,r[11]=y*E+s*C+m*R,n!==r&&(r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15]),r)}},{}],22:[function(r,n,a){n.exports=function(r,n,a){var e=Math.sin(a),t=Math.cos(a),o=n[4],l=n[5],i=n[6],c=n[7],u=n[8],y=n[9],w=n[10],A=n[11];return n!==r&&(r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15]),r[4]=o*t+u*e,r[5]=l*t+y*e,r[6]=i*t+w*e,r[7]=c*t+A*e,r[8]=u*t-o*e,r[9]=y*t-l*e,r[10]=w*t-i*e,r[11]=A*t-c*e,r}},{}],23:[function(r,n,a){n.exports=function(r,n,a){var e=Math.sin(a),t=Math.cos(a),o=n[0],l=n[1],i=n[2],c=n[3],u=n[8],y=n[9],w=n[10],A=n[11];return n!==r&&(r[4]=n[4],r[5]=n[5],r[6]=n[6],r[7]=n[7],r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15]),r[0]=o*t-u*e,r[1]=l*t-y*e,r[2]=i*t-w*e,r[3]=c*t-A*e,r[8]=o*e+u*t,r[9]=l*e+y*t,r[10]=i*e+w*t,r[11]=c*e+A*t,r}},{}],24:[function(r,n,a){n.exports=function(r,n,a){var e=Math.sin(a),t=Math.cos(a),o=n[0],l=n[1],i=n[2],c=n[3],u=n[4],y=n[5],w=n[6],A=n[7];return n!==r&&(r[8]=n[8],r[9]=n[9],r[10]=n[10],r[11]=n[11],r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15]),r[0]=o*t+u*e,r[1]=l*t+y*e,r[2]=i*t+w*e,r[3]=c*t+A*e,r[4]=u*t-o*e,r[5]=y*t-l*e,r[6]=w*t-i*e,r[7]=A*t-c*e,r}},{}],25:[function(r,n,a){n.exports=function(r,n,a){var e=a[0],t=a[1],o=a[2];return r[0]=n[0]*e,r[1]=n[1]*e,r[2]=n[2]*e,r[3]=n[3]*e,r[4]=n[4]*t,r[5]=n[5]*t,r[6]=n[6]*t,r[7]=n[7]*t,r[8]=n[8]*o,r[9]=n[9]*o,r[10]=n[10]*o,r[11]=n[11]*o,r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15],r}},{}],26:[function(r,n,a){n.exports=function(r){return"mat4("+r[0]+", "+r[1]+", "+r[2]+", "+r[3]+", "+r[4]+", "+r[5]+", "+r[6]+", "+r[7]+", "+r[8]+", "+r[9]+", "+r[10]+", "+r[11]+", "+r[12]+", "+r[13]+", "+r[14]+", "+r[15]+")"}},{}],27:[function(r,n,a){n.exports=function(r,n,a){var e,t,o,l,i,c,u,y,w,A,F,s,f=a[0],v=a[1],p=a[2];return n===r?(r[12]=n[0]*f+n[4]*v+n[8]*p+n[12],r[13]=n[1]*f+n[5]*v+n[9]*p+n[13],r[14]=n[2]*f+n[6]*v+n[10]*p+n[14],r[15]=n[3]*f+n[7]*v+n[11]*p+n[15]):(e=n[0],t=n[1],o=n[2],l=n[3],i=n[4],c=n[5],u=n[6],y=n[7],w=n[8],A=n[9],F=n[10],s=n[11],r[0]=e,r[1]=t,r[2]=o,r[3]=l,r[4]=i,r[5]=c,r[6]=u,r[7]=y,r[8]=w,r[9]=A,r[10]=F,r[11]=s,r[12]=e*f+i*v+w*p+n[12],r[13]=t*f+c*v+A*p+n[13],r[14]=o*f+u*v+F*p+n[14],r[15]=l*f+y*v+s*p+n[15]),r}},{}],28:[function(r,n,a){n.exports=function(r,n){if(r===n){var a=n[1],e=n[2],t=n[3],o=n[6],l=n[7],i=n[11];r[1]=n[4],r[2]=n[8],r[3]=n[12],r[4]=a,r[6]=n[9],r[7]=n[13],r[8]=e,r[9]=o,r[11]=n[14],r[12]=t,r[13]=l,r[14]=i}else r[0]=n[0],r[1]=n[4],r[2]=n[8],r[3]=n[12],r[4]=n[1],r[5]=n[5],r[6]=n[9],r[7]=n[13],r[8]=n[2],r[9]=n[6],r[10]=n[10],r[11]=n[14],r[12]=n[3],r[13]=n[7],r[14]=n[11],r[15]=n[15];return r}},{}],29:[function(r,n,a){n.exports=function(r,n,a){return r[0]=n[0]+a[0],r[1]=n[1]+a[1],r[2]=n[2]+a[2],r}},{}],30:[function(r,n,a){n.exports=function(r,n){var a=e(r[0],r[1],r[2]),l=e(n[0],n[1],n[2]);t(a,a),t(l,l);var i=o(a,l);return i>1?0:Math.acos(i)};var e=r("./fromValues"),t=r("./normalize"),o=r("./dot")},{"./dot":37,"./fromValues":39,"./normalize":48}],31:[function(r,n,a){n.exports=function(r){var n=new Float32Array(3);return n[0]=r[0],n[1]=r[1],n[2]=r[2],n}},{}],32:[function(r,n,a){n.exports=function(r,n){return r[0]=n[0],r[1]=n[1],r[2]=n[2],r}},{}],33:[function(r,n,a){n.exports=function(){var r=new Float32Array(3);return r[0]=0,r[1]=0,r[2]=0,r}},{}],34:[function(r,n,a){n.exports=function(r,n,a){var e=n[0],t=n[1],o=n[2],l=a[0],i=a[1],c=a[2];return r[0]=t*c-o*i,r[1]=o*l-e*c,r[2]=e*i-t*l,r}},{}],35:[function(r,n,a){n.exports=function(r,n){var a=n[0]-r[0],e=n[1]-r[1],t=n[2]-r[2];return Math.sqrt(a*a+e*e+t*t)}},{}],36:[function(r,n,a){n.exports=function(r,n,a){return r[0]=n[0]/a[0],r[1]=n[1]/a[1],r[2]=n[2]/a[2],r}},{}],37:[function(r,n,a){n.exports=function(r,n){return r[0]*n[0]+r[1]*n[1]+r[2]*n[2]}},{}],38:[function(r,n,a){n.exports=function(r,n,a,t,o,l){var i,c;for(n||(n=3),a||(a=0),c=t?Math.min(t*n+a,r.length):r.length,i=a;i<c;i+=n)e[0]=r[i],e[1]=r[i+1],e[2]=r[i+2],o(e,e,l),r[i]=e[0],r[i+1]=e[1],r[i+2]=e[2];return r};var e=r("./create")()},{"./create":33}],39:[function(r,n,a){n.exports=function(r,n,a){var e=new Float32Array(3);return e[0]=r,e[1]=n,e[2]=a,e}},{}],40:[function(r,n,a){n.exports={create:r("./create"),clone:r("./clone"),angle:r("./angle"),fromValues:r("./fromValues"),copy:r("./copy"),set:r("./set"),add:r("./add"),subtract:r("./subtract"),multiply:r("./multiply"),divide:r("./divide"),min:r("./min"),max:r("./max"),scale:r("./scale"),scaleAndAdd:r("./scaleAndAdd"),distance:r("./distance"),squaredDistance:r("./squaredDistance"),length:r("./length"),squaredLength:r("./squaredLength"),negate:r("./negate"),inverse:r("./inverse"),normalize:r("./normalize"),dot:r("./dot"),cross:r("./cross"),lerp:r("./lerp"),random:r("./random"),transformMat4:r("./transformMat4"),transformMat3:r("./transformMat3"),transformQuat:r("./transformQuat"),rotateX:r("./rotateX"),rotateY:r("./rotateY"),rotateZ:r("./rotateZ"),forEach:r("./forEach")}},{"./add":29,"./angle":30,"./clone":31,"./copy":32,"./create":33,"./cross":34,"./distance":35,"./divide":36,"./dot":37,"./forEach":38,"./fromValues":39,"./inverse":41,"./length":42,"./lerp":43,"./max":44,"./min":45,"./multiply":46,"./negate":47,"./normalize":48,"./random":49,"./rotateX":50,"./rotateY":51,"./rotateZ":52,"./scale":53,"./scaleAndAdd":54,"./set":55,"./squaredDistance":56,"./squaredLength":57,"./subtract":58,"./transformMat3":59,"./transformMat4":60,"./transformQuat":61}],41:[function(r,n,a){n.exports=function(r,n){return r[0]=1/n[0],r[1]=1/n[1],r[2]=1/n[2],r}},{}],42:[function(r,n,a){n.exports=function(r){var n=r[0],a=r[1],e=r[2];return Math.sqrt(n*n+a*a+e*e)}},{}],43:[function(r,n,a){n.exports=function(r,n,a,e){var t=n[0],o=n[1],l=n[2];return r[0]=t+e*(a[0]-t),r[1]=o+e*(a[1]-o),r[2]=l+e*(a[2]-l),r}},{}],44:[function(r,n,a){n.exports=function(r,n,a){return r[0]=Math.max(n[0],a[0]),r[1]=Math.max(n[1],a[1]),r[2]=Math.max(n[2],a[2]),r}},{}],45:[function(r,n,a){n.exports=function(r,n,a){return r[0]=Math.min(n[0],a[0]),r[1]=Math.min(n[1],a[1]),r[2]=Math.min(n[2],a[2]),r}},{}],46:[function(r,n,a){n.exports=function(r,n,a){return r[0]=n[0]*a[0],r[1]=n[1]*a[1],r[2]=n[2]*a[2],r}},{}],47:[function(r,n,a){n.exports=function(r,n){return r[0]=-n[0],r[1]=-n[1],r[2]=-n[2],r}},{}],48:[function(r,n,a){n.exports=function(r,n){var a=n[0],e=n[1],t=n[2],o=a*a+e*e+t*t;return o>0&&(o=1/Math.sqrt(o),r[0]=n[0]*o,r[1]=n[1]*o,r[2]=n[2]*o),r}},{}],49:[function(r,n,a){n.exports=function(r,n){n=n||1;var a=2*Math.random()*Math.PI,e=2*Math.random()-1,t=Math.sqrt(1-e*e)*n;return r[0]=Math.cos(a)*t,r[1]=Math.sin(a)*t,r[2]=e*n,r}},{}],50:[function(r,n,a){n.exports=function(r,n,a,e){var t=[],o=[];return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],o[0]=t[0],o[1]=t[1]*Math.cos(e)-t[2]*Math.sin(e),o[2]=t[1]*Math.sin(e)+t[2]*Math.cos(e),r[0]=o[0]+a[0],r[1]=o[1]+a[1],r[2]=o[2]+a[2],r}},{}],51:[function(r,n,a){n.exports=function(r,n,a,e){var t=[],o=[];return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],o[0]=t[2]*Math.sin(e)+t[0]*Math.cos(e),o[1]=t[1],o[2]=t[2]*Math.cos(e)-t[0]*Math.sin(e),r[0]=o[0]+a[0],r[1]=o[1]+a[1],r[2]=o[2]+a[2],r}},{}],52:[function(r,n,a){n.exports=function(r,n,a,e){var t=[],o=[];return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],o[0]=t[0]*Math.cos(e)-t[1]*Math.sin(e),o[1]=t[0]*Math.sin(e)+t[1]*Math.cos(e),o[2]=t[2],r[0]=o[0]+a[0],r[1]=o[1]+a[1],r[2]=o[2]+a[2],r}},{}],53:[function(r,n,a){n.exports=function(r,n,a){return r[0]=n[0]*a,r[1]=n[1]*a,r[2]=n[2]*a,r}},{}],54:[function(r,n,a){n.exports=function(r,n,a,e){return r[0]=n[0]+a[0]*e,r[1]=n[1]+a[1]*e,r[2]=n[2]+a[2]*e,r}},{}],55:[function(r,n,a){n.exports=function(r,n,a,e){return r[0]=n,r[1]=a,r[2]=e,r}},{}],56:[function(r,n,a){n.exports=function(r,n){var a=n[0]-r[0],e=n[1]-r[1],t=n[2]-r[2];return a*a+e*e+t*t}},{}],57:[function(r,n,a){n.exports=function(r){var n=r[0],a=r[1],e=r[2];return n*n+a*a+e*e}},{}],58:[function(r,n,a){n.exports=function(r,n,a){return r[0]=n[0]-a[0],r[1]=n[1]-a[1],r[2]=n[2]-a[2],r}},{}],59:[function(r,n,a){n.exports=function(r,n,a){var e=n[0],t=n[1],o=n[2];return r[0]=e*a[0]+t*a[3]+o*a[6],r[1]=e*a[1]+t*a[4]+o*a[7],r[2]=e*a[2]+t*a[5]+o*a[8],r}},{}],60:[function(r,n,a){n.exports=function(r,n,a){var e=n[0],t=n[1],o=n[2],l=a[3]*e+a[7]*t+a[11]*o+a[15];return l=l||1,r[0]=(a[0]*e+a[4]*t+a[8]*o+a[12])/l,r[1]=(a[1]*e+a[5]*t+a[9]*o+a[13])/l,r[2]=(a[2]*e+a[6]*t+a[10]*o+a[14])/l,r}},{}],61:[function(r,n,a){n.exports=function(r,n,a){var e=n[0],t=n[1],o=n[2],l=a[0],i=a[1],c=a[2],u=a[3],y=u*e+i*o-c*t,w=u*t+c*e-l*o,A=u*o+l*t-i*e,F=-l*e-i*t-c*o;return r[0]=y*u+F*-l+w*-c-A*-i,r[1]=w*u+F*-i+A*-l-y*-c,r[2]=A*u+F*-c+y*-i-w*-l,r}},{}],62:[function(r,n,a){(function(r){n.exports=r.performance&&r.performance.now?function(){return performance.now()}:Date.now||function(){return+new Date}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1]);
